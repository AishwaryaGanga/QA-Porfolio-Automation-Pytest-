{"name": "test_open_amazon_homepage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".a-button-text\"}\n  (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000100d3d358 chromedriver + 6136664\n1   chromedriver                        0x0000000100d34aba chromedriver + 6101690\n2   chromedriver                        0x00000001007c9380 chromedriver + 418688\n3   chromedriver                        0x000000010081af34 chromedriver + 753460\n4   chromedriver                        0x000000010081b151 chromedriver + 754001\n5   chromedriver                        0x000000010086b9d4 chromedriver + 1083860\n6   chromedriver                        0x000000010084121d chromedriver + 909853\n7   chromedriver                        0x0000000100868d82 chromedriver + 1072514\n8   chromedriver                        0x0000000100840fc3 chromedriver + 909251\n9   chromedriver                        0x000000010080d217 chromedriver + 696855\n10  chromedriver                        0x000000010080de81 chromedriver + 700033\n11  chromedriver                        0x0000000100cfb220 chromedriver + 5866016\n12  chromedriver                        0x0000000100cff18f chromedriver + 5882255\n13  chromedriver                        0x0000000100cd65c2 chromedriver + 5715394\n14  chromedriver                        0x0000000100cffaef chromedriver + 5884655\n15  chromedriver                        0x0000000100cc4d84 chromedriver + 5643652\n16  chromedriver                        0x0000000100d222b8 chromedriver + 6025912\n17  chromedriver                        0x0000000100d22480 chromedriver + 6026368\n18  chromedriver                        0x0000000100d34681 chromedriver + 6100609\n19  libsystem_pthread.dylib             0x00007ff811df6df1 _pthread_start + 99\n20  libsystem_pthread.dylib             0x00007ff811df2857 thread_start + 15", "trace": "self = <test.test_amazon_homepage.TestOpenAmazonHomePage object at 0x7fe3213a8ca0>\napp = <app.application.Application object at 0x7fe3213a8ac0>\n\n    def test_open_amazon_homepage(self,app):\n        app.open_amazon.open_amazon_homepage()\n>       app.open_amazon.continue_shopping()\n\ntest/test_amazon_homepage.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/amazon_homepage.py:18: in continue_shopping\n    self.click(*self.CONTINUE_BTN)\nPages/basepage.py:29: in click\n    self.driver.find_element(*locator).click()\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe321412280>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...7ff811df6df1 _pthread_start + 99\\\\n20  libsystem_pthread.dylib             0x00007ff811df2857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".a-button-text\"}\nE         (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100d3d358 chromedriver + 6136664\nE       1   chromedriver                        0x0000000100d34aba chromedriver + 6101690\nE       2   chromedriver                        0x00000001007c9380 chromedriver + 418688\nE       3   chromedriver                        0x000000010081af34 chromedriver + 753460\nE       4   chromedriver                        0x000000010081b151 chromedriver + 754001\nE       5   chromedriver                        0x000000010086b9d4 chromedriver + 1083860\nE       6   chromedriver                        0x000000010084121d chromedriver + 909853\nE       7   chromedriver                        0x0000000100868d82 chromedriver + 1072514\nE       8   chromedriver                        0x0000000100840fc3 chromedriver + 909251\nE       9   chromedriver                        0x000000010080d217 chromedriver + 696855\nE       10  chromedriver                        0x000000010080de81 chromedriver + 700033\nE       11  chromedriver                        0x0000000100cfb220 chromedriver + 5866016\nE       12  chromedriver                        0x0000000100cff18f chromedriver + 5882255\nE       13  chromedriver                        0x0000000100cd65c2 chromedriver + 5715394\nE       14  chromedriver                        0x0000000100cffaef chromedriver + 5884655\nE       15  chromedriver                        0x0000000100cc4d84 chromedriver + 5643652\nE       16  chromedriver                        0x0000000100d222b8 chromedriver + 6025912\nE       17  chromedriver                        0x0000000100d22480 chromedriver + 6026368\nE       18  chromedriver                        0x0000000100d34681 chromedriver + 6100609\nE       19  libsystem_pthread.dylib             0x00007ff811df6df1 _pthread_start + 99\nE       20  libsystem_pthread.dylib             0x00007ff811df2857 thread_start + 15\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException"}, "start": 1750774506239, "stop": 1750774526871, "uuid": "021a940a-5f3a-4c97-a6d9-4aed1d086a26", "historyId": "2ea6da72e3f80bb7a885a39ec44a56e4", "testCaseId": "2ea6da72e3f80bb7a885a39ec44a56e4", "fullName": "test.test_amazon_homepage.TestOpenAmazonHomePage#test_open_amazon_homepage", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_amazon_homepage"}, {"name": "subSuite", "value": "TestOpenAmazonHomePage"}, {"name": "host", "value": "Vaishnavis-MacBook-Air.local"}, {"name": "thread", "value": "10494-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_amazon_homepage"}]}